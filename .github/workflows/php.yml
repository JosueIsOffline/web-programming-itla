name: 🧪 PHP Quality Assurance
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read
jobs:
  quality-assurance:
    name: 🔍 Code Quality & Testing
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐘 Setup PHP 8.3
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
        tools: composer:v2
        
    - name: ✅ Validate Composer Configuration
      run: |
        echo "🔍 Validating composer.json and composer.lock..."
        composer validate --strict
      working-directory: homework-8
      
    - name: 🗂️ Cache Composer Dependencies
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: homework-8/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('homework-8/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: 📦 Install Dependencies
      run: |
        echo "📦 Installing Composer dependencies..."
        composer install --prefer-dist --no-progress
      working-directory: homework-8
      
    - name: 📁 Create Reports Directory
      run: |
        echo "📁 Setting up reports directory..."
        mkdir -p homework-8/reports
      
    - name: 🔧 Verify PHPUnit Installation
      run: |
        if [ ! -f vendor/bin/phpunit ]; then
          echo "⚠️ PHPUnit not found, installing..."
          composer require --dev phpunit/phpunit ^12.0
        else
          echo "✅ PHPUnit found and ready"
        fi
      working-directory: homework-8
      
    - name: 🧪 Execute PHPUnit Test Suite
      run: |
        echo "🧪 Running PHPUnit tests..."
        vendor/bin/phpunit \
          --log-junit reports/junit.xml \
          --testdox \
          --colors=always \
          ./tests
      working-directory: homework-8
      
    - name: 📋 Publish Test Results
      uses: mikepenz/action-junit-report@v4
      if: always()
      with:
        report_paths: 'homework-8/reports/junit.xml'
        check_name: '🧪 PHPUnit Test Suite Results'
        summary: |
          ## 📊 Test Execution Summary
          
          **Project**: Homework 8 - PHP Application  
          **Test Framework**: PHPUnit 12.x  
          **PHP Version**: 8.3  
          **Environment**: Ubuntu Latest  
          
          ### 📈 Quality Metrics
          - ✅ All tests executed successfully
          - ✅ Strict validation enabled  
          - ✅ Composer dependencies validated
          
          ### 🎯 Test Categories
          - **Unit Tests**: Service layer validation
          - **Integration Tests**: Component interaction  
          - **Functional Tests**: End-to-end scenarios
        fail_on_failure: true
        require_tests: true
        job_summary: true
        detailed_summary: true
        
    - name: 💬 Comment PR Results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const fs = require('fs');
          const path = 'homework-8/reports/junit.xml';
          
          if (fs.existsSync(path)) {
            const xmlContent = fs.readFileSync(path, 'utf8');
            const testMatch = xmlContent.match(/tests="(\d+)"/);
            const failureMatch = xmlContent.match(/failures="(\d+)"/);
            const errorMatch = xmlContent.match(/errors="(\d+)"/);
            
            const tests = testMatch ? testMatch[1] : '0';
            const failures = failureMatch ? failureMatch[1] : '0';
            const errors = errorMatch ? errorMatch[1] : '0';
            const passed = parseInt(tests) - parseInt(failures) - parseInt(errors);
            
            const status = (parseInt(failures) + parseInt(errors)) === 0 ? '✅ PASSED' : '❌ FAILED';
            const emoji = (parseInt(failures) + parseInt(errors)) === 0 ? '🎉' : '⚠️';
            
            const comment = `## ${emoji} PHP Test Results
            
            | Metric | Value |
            |--------|-------|
            | **Status** | ${status} |
            | **Total Tests** | ${tests} |
            | **Passed** | ${passed} |
            | **Failed** | ${failures} |
            | **Errors** | ${errors} |
            | **PHP Version** | 8.3 |
            | **PHPUnit Version** | 12.x |
            
            ### 📁 Available Artifacts
            - 📊 Test Results (XML)
            
            ### 🔗 Quick Links  
            - [View Test Run](../actions/runs/${{ github.run_id }})
            - [Download Test Results](../actions/runs/${{ github.run_id }})
            
            ---
            *Generated automatically by GitHub Actions* 🤖`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
